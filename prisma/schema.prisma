// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                   @id @map("_id")
  email                  String                   @unique
  email_verified         Boolean
  auth_session           Session[]
  key                    Key[]
  EmailVerificationToken EmailVerificationToken[]
  PasswordResetToken     PasswordResetToken[]
  name                   String
  collections            Collection[]
}

model Session {
  id             String @id @map("_id")
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @map("_id")
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model EmailVerificationToken {
  id      String @id @map("_id")
  expires BigInt
  user_id String
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model PasswordResetToken {
  id      String @id @map("_id")
  expires BigInt
  user_id String
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

enum Color {
  BW     @map("bw") // BLACK AND WHITE, More like tons of gray
  RED    @map("red")
  BLUE   @map("blue")
  GREEN  @map("green")
  YELLOW @map("yellow")
}

type Icon {
  name  String @default("")
  color Color  @default(BW)
}

model Collection {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  isFavourite Boolean  @default(false)
  description String   @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     String
}
